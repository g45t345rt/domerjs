{"version":3,"file":"domerjs.umd.js","sources":["../src/presets/router.js","../src/index.js"],"sourcesContent":["const router = (func) => ({\r\n  router: true,\r\n  tag: 'div',\r\n  render: function () {\r\n    const { pathname } = window.location\r\n    return func(pathname)\r\n  },\r\n  windowEvents: {\r\n    popstate: function () {\r\n      // TODO: Maybe check if path is assigned to this router\r\n      this.update()\r\n    }\r\n  }\r\n})\r\n\r\nfunction pushRoute (entry, path) {\r\n  window.history.pushState({ path }, '', path)\r\n  const router = entry.getFirstParent((parent) => parent.router === true)\r\n  if (router) router.update()\r\n}\r\n\r\nconst link = (href, text, props) => ({\r\n  tag: 'a',\r\n  props: { href, ...props },\r\n  render: text,\r\n  events: {\r\n    click: function (e) {\r\n      e.preventDefault()\r\n      pushRoute(this, href)\r\n\r\n      // Scroll to tag title \r\n      const hashIndex = href.indexOf('#')\r\n      if (hashIndex !== -1) {\r\n        const hash = href.substring(hashIndex + 1)\r\n        const element = document.getElementById(hash)\r\n        if (element) window.scrollTo(0, element.offsetTop)\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default {\r\n  router,\r\n  link,\r\n  pushRoute\r\n}\r\n\r\n/*\r\nexport default (func) => {\r\n  const router = {\r\n    tag: 'div',\r\n    render: function () {\r\n      const { pathname } = window.location\r\n      return func(pathname)\r\n    },\r\n    windowEvents: {\r\n      popstate: function () {\r\n        this.update()\r\n      }\r\n    },\r\n    link: function (path, text) {\r\n      return {\r\n        tag: 'a',\r\n        props: { href: path },\r\n        render: text,\r\n        events: {\r\n          click: function (e) {\r\n            e.preventDefault()\r\n            window.history.pushState({ path }, '', path)\r\n            router.update()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return router\r\n}*/\r\n","import router from './presets/router'\r\nexport const routing = router\r\n\r\nfunction getAttrValue (entry, key) {\r\n  const { props = {} } = entry\r\n  if (typeof props[key] === 'function') return props[key].bind(entry).call()\r\n  return props[key]\r\n}\r\n\r\nfunction updateElementProps (entry) {\r\n  const { props = {}, element } = entry\r\n\r\n  Object.keys(props).forEach((key) => {\r\n    const newValue = getAttrValue(entry, key)\r\n    if (newValue === false) element.removeAttribute(key)\r\n    else element.setAttribute(key, newValue)\r\n  })\r\n}\r\n\r\nfunction setElementEvents (entry) {\r\n  entry.listeners = []\r\n  Object.keys(entry).forEach((key) => {\r\n    let element = null\r\n    if (key === 'events') element = entry.element\r\n    if (key === 'windowEvents') element = window\r\n    if (key === 'documentEvents') element = document\r\n    if (!element) return\r\n\r\n    const eventProps = entry[key]\r\n    Object.keys(eventProps).forEach((eventKey) => {\r\n      const eventFunc = eventProps[eventKey].bind(entry)\r\n      entry.listeners.push({ element, eventKey, eventFunc })\r\n      element.addEventListener(eventKey, eventFunc)\r\n    })\r\n  })\r\n}\r\n\r\nfunction clearElementEvents (entry) {\r\n  entry.listeners.forEach((listener) => {\r\n    const { element, eventKey, eventFunc } = listener\r\n    element.removeEventListener(eventKey, eventFunc)\r\n  })\r\n  entry.listeners = []\r\n}\r\n\r\nfunction setUpdateFunc (entry, options) {\r\n  entry.update = function () {\r\n    if (!this.mounted) return\r\n    traverse(this, null, options)\r\n    if (typeof entry.onUpdate === 'function') entry.onUpdate()\r\n  }\r\n}\r\n\r\nfunction setStateFunc (entry) {\r\n  entry.setState = function (props) {\r\n    Object.keys(props).forEach((key) => {\r\n      this.state[key] = props[key]\r\n    })\r\n    this.update()\r\n  }\r\n}\r\n\r\nfunction setGetFirstParentFunc (entry) {\r\n  entry.getFirstParent = function (func) {\r\n    if (!this.parent || !this.parent.getFirstParent) return null\r\n    if (func(this.parent)) return this.parent\r\n    return this.parent.getFirstParent(func)\r\n  }\r\n}\r\n\r\nfunction childrenToArray (children) {\r\n  let childs = []\r\n  if (Array.isArray(children)) {\r\n    // simple child array\r\n    childs = children\r\n  } else if (children && typeof children === 'object') {\r\n    if (children.tag) {\r\n      // if tag then object is actually a template definition\r\n      childs.push(children)\r\n    } else {\r\n      // object contains multiple template definition assigned by keys\r\n      childs = Object.values(children)\r\n    }\r\n  }\r\n\r\n  return childs\r\n}\r\n\r\nfunction mount (entry, parent, options) {\r\n  if (entry.mounted) return\r\n  // Assign default properties\r\n  if (parent) entry.parent = parent\r\n  if (options.context) entry.context = options.context\r\n  if (!entry.state) entry.state = {}\r\n\r\n  // Create element from DOM\r\n  entry.element = document.createElement(entry.tag)\r\n  entry.mounted = true\r\n\r\n  // Register events\r\n  setElementEvents(entry)\r\n\r\n  // Set helper functions\r\n  setUpdateFunc(entry, options)\r\n  setStateFunc(entry)\r\n  setGetFirstParentFunc(entry)\r\n\r\n  if (typeof entry.onMount === 'function') entry.onMount()\r\n}\r\n\r\nfunction unmount (entry) {\r\n  if (!entry.mounted) return\r\n  if (typeof entry.onUnMount === 'function') entry.onUnMount()\r\n  clearElementEvents(entry)\r\n  entry.parent = null\r\n  entry.element = null\r\n  entry.mounted = false\r\n\r\n  // Unmount childs recursive\r\n  childrenToArray(entry.children).forEach((child) => unmount(child))\r\n}\r\n\r\nfunction append (entry) {\r\n  if (entry.appended) return\r\n\r\n  entry.parent.element.appendChild(entry.element)\r\n  entry.appended = true\r\n\r\n  if (typeof entry.onAppend === 'function') entry.onAppend()\r\n}\r\n\r\nfunction detach (entry) {\r\n  if (!entry.appended) return\r\n  if (typeof entry.onDetach === 'function') entry.onDetach()\r\n  entry.parent.element.removeChild(entry.element)\r\n  entry.appended = false\r\n  // Detach childs recursive\r\n  childrenToArray(entry.children).forEach((child) => detach(child))\r\n}\r\n\r\nfunction funcRender (entry, render) {\r\n  if (typeof render === 'function') {\r\n    const result = entry.render()\r\n    //if (typeof result !== 'function') entry.children = result\r\n    return funcRender(entry, result)\r\n  }\r\n\r\n  return render\r\n}\r\n\r\nconst textRenderTypes = ['string', 'number']\r\n// Recursive function that compute the tree\r\nfunction traverse (entry, parent, options) {\r\n  // Apply all definition from entry obj [if not already mounted]\r\n  mount(entry, parent, options)\r\n\r\n  // Set element attributes everytime we traverse or update the entry (template)\r\n  updateElementProps(entry)\r\n\r\n  const oldChildren = entry.children\r\n  // Apply render might change entry.children\r\n  //applyRender(entry, entry.render)\r\n  const toRender = funcRender(entry, entry.render)\r\n  if (toRender) entry.children = toRender\r\n\r\n  const oldChildrenArray = childrenToArray(oldChildren)\r\n  const newChildrenArray = childrenToArray(entry.children)\r\n\r\n  // Detach and unmount old childs\r\n  oldChildrenArray.forEach((oldChild) => {\r\n    // Detach all child because they might not be in the same order\r\n    detach(oldChild)\r\n\r\n    // Unmount childs not return by render\r\n    const matchChild = newChildrenArray.find((newChild) => {\r\n      return newChild.element && oldChild.element.isEqualNode(newChild.element)\r\n    })\r\n\r\n    if (!matchChild) {\r\n      //detach(oldChild)\r\n      unmount(oldChild)\r\n    }\r\n  })\r\n\r\n  if (textRenderTypes.indexOf(typeof oldChildren) !== -1 && textRenderTypes.indexOf(typeof entry.children) === -1) {\r\n    if (entry.html) entry.element.innerHTML = ''\r\n    else entry.element.textContent = ''\r\n    //entry.appended = false\r\n  }\r\n\r\n  // When children is a string or number\r\n  if (textRenderTypes.indexOf(typeof entry.children) !== -1 && (entry.children !== oldChildren || !entry.appended)) {\r\n    if (entry.html) entry.element.innerHTML = entry.children\r\n    else entry.element.textContent = entry.children\r\n  }\r\n\r\n  // Apply childs\r\n  newChildrenArray.forEach((child) => {\r\n    traverse(child, entry, options)\r\n  })\r\n\r\n  if (toRender === false) detach(entry)\r\n  else append(entry)\r\n}\r\n\r\nexport function createApp (entry, rootElement, options) {\r\n  const parent = { element: rootElement }\r\n  traverse(entry, parent, options)\r\n}\r\n\r\n// Helpers\r\nexport function cl (styles, ...classNames) {\r\n  return classNames.map((className) => {\r\n    return styles[className]\r\n  }).join(' ')\r\n}\r\n\r\nfunction camelToDash (str) {\r\n  return str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase()\r\n}\r\n\r\nexport function st (styles) {\r\n  let str = ''\r\n  Object.keys(styles).forEach((key) => {\r\n    str += `${camelToDash(key)}:${styles[key]};`\r\n  })\r\n  return str\r\n}\r\n\r\n// NODOM (SSR)\r\nfunction propsToString (entry) {\r\n  let s = ''\r\n  const { props = {} } = entry\r\n  Object.keys(props).forEach((key) => {\r\n    let sKey = key\r\n    if (sKey === 'className') sKey = 'class'\r\n    s += ` ${sKey}=\"${getAttrValue(entry, key)}\"`\r\n  })\r\n\r\n  return s\r\n}\r\n\r\nconst selfClosingTags = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr']\r\n\r\nexport function createHtml (entry, parent) {\r\n  if (parent && !entry.parent) entry.parent = parent\r\n\r\n  const propsString = propsToString(entry)\r\n  const { tag, render } = entry\r\n\r\n  if (selfClosingTags.indexOf(tag) !== -1) {\r\n    return `<${tag}${propsString}/>`\r\n  } else {\r\n    let childHtml = ''\r\n\r\n    if (typeof render === 'string') {\r\n      childHtml += render\r\n    }\r\n\r\n    let children = entry.children\r\n    if (typeof render === 'function') {\r\n      const result = entry.render()\r\n      if (typeof result === 'string') childHtml += result\r\n      else children = result\r\n    }\r\n\r\n    const childs = childrenToArray(children)\r\n    childs.forEach((child) => childHtml += createHtml(child, entry))\r\n\r\n    //if (!tag) return childHtml\r\n    return `<${tag}${propsString}>${childHtml}</${tag}>`\r\n  }\r\n}\r\n"],"names":["pushRoute","entry","path","window","history","pushState","router","getFirstParent","parent","update","routing","func","tag","render","pathname","location","windowEvents","popstate","this","link","href","text","props","events","click","e","preventDefault","hashIndex","indexOf","hash","substring","element","document","getElementById","scrollTo","offsetTop","getAttrValue","key","bind","call","childrenToArray","children","childs","Array","isArray","push","Object","values","detach","appended","onDetach","removeChild","forEach","child","textRenderTypes","selfClosingTags","styles","map","className","join","rootElement","options","traverse","mounted","context","state","createElement","listeners","keys","eventProps","eventKey","eventFunc","addEventListener","setElementEvents","onUpdate","setUpdateFunc","setState","_this","setStateFunc","setGetFirstParentFunc","onMount","mount","newValue","removeAttribute","setAttribute","updateElementProps","oldChildren","toRender","funcRender","result","oldChildrenArray","newChildrenArray","oldChild","find","newChild","isEqualNode","unmount","onUnMount","listener","removeEventListener","clearElementEvents","html","innerHTML","textContent","appendChild","onAppend","append","createHtml","propsString","s","sKey","propsToString","childHtml","str","replace","toLowerCase","camelToDash"],"mappings":"sYAeA,SAASA,EAAWC,EAAOC,GACzBC,OAAOC,QAAQC,UAAU,CAAEH,KAAAA,GAAQ,GAAIA,GACvC,IAAMI,EAASL,EAAMM,eAAe,SAACC,UAA6B,IAAlBA,EAAOF,SACnDA,GAAQA,EAAOG,SAGrB,ICpBaC,EDwCE,CACbJ,OA1Ca,SAACK,SAAU,CACxBL,QAAQ,EACRM,IAAK,MACLC,OAAQ,eACEC,EAAaX,OAAOY,SAApBD,SACR,OAAOH,EAAKG,IAEdE,aAAc,CACZC,SAAU,WAERC,KAAKT,aAiCTU,KAtBW,SAACC,EAAMC,EAAMC,SAAW,CACnCV,IAAK,IACLU,SAASF,KAAAA,GAASE,GAClBT,OAAQQ,EACRE,OAAQ,CACNC,MAAO,SAAUC,GACfA,EAAEC,iBACF1B,EAAUkB,KAAME,GAGhB,IAAMO,EAAYP,EAAKQ,QAAQ,KAC/B,IAAmB,IAAfD,EAAkB,CACpB,IAAME,EAAOT,EAAKU,UAAUH,EAAY,GAClCI,EAAUC,SAASC,eAAeJ,GACpCE,GAAS5B,OAAO+B,SAAS,EAAGH,EAAQI,gBAS9CnC,UAAAA,GCzCF,SAASoC,EAAcnC,EAAOoC,SACLpC,EAAfqB,MAAAA,aAAQ,KAChB,MAA0B,mBAAfA,EAAMe,GAA4Bf,EAAMe,GAAKC,KAAKrC,GAAOsC,OAC7DjB,EAAMe,GAgEf,SAASG,EAAiBC,GACxB,IAAIC,EAAS,GAcb,OAbIC,MAAMC,QAAQH,GAEhBC,EAASD,EACAA,GAAgC,iBAAbA,IACxBA,EAAS7B,IAEX8B,EAAOG,KAAKJ,GAGZC,EAASI,OAAOC,OAAON,IAIpBC,EA8CT,SAASM,EAAQ/C,GACVA,EAAMgD,WACmB,mBAAnBhD,EAAMiD,UAAyBjD,EAAMiD,WAChDjD,EAAMO,OAAOuB,QAAQoB,YAAYlD,EAAM8B,SACvC9B,EAAMgD,UAAW,EAEjBT,EAAgBvC,EAAMwC,UAAUW,QAAQ,SAACC,UAAUL,EAAOK,MAa5D,IAAMC,EAAkB,CAAC,SAAU,UA4F7BC,EAAkB,CAAC,OAAQ,OAAQ,KAAM,MAAO,QAAS,KAAM,MAAO,QAAS,OAAQ,OAAQ,QAAS,SAAU,QAAS,YA/BjI,SAAoBC,GAClB,MAAO,2BAAWC,IAAI,SAACC,GACrB,OAAOF,EAAOE,KACbC,KAAK,2BATiB1D,EAAO2D,EAAaC,IArD/C,SAASC,EAAU7D,EAAOO,EAAQqD,IAhElC,SAAgB5D,EAAOO,EAAQqD,GACzB5D,EAAM8D,UAENvD,IAAQP,EAAMO,OAASA,GACvBqD,EAAQG,UAAS/D,EAAM+D,QAAUH,EAAQG,SACxC/D,EAAMgE,QAAOhE,EAAMgE,MAAQ,IAGhChE,EAAM8B,QAAUC,SAASkC,cAAcjE,EAAMW,KAC7CX,EAAM8D,SAAU,EA9ElB,SAA2B9D,GACzBA,EAAMkE,UAAY,GAClBrB,OAAOsB,KAAKnE,GAAOmD,QAAQ,SAACf,GAC1B,IAAIN,EAAU,KAId,GAHY,WAARM,IAAkBN,EAAU9B,EAAM8B,SAC1B,iBAARM,IAAwBN,EAAU5B,QAC1B,mBAARkC,IAA0BN,EAAUC,UACnCD,EAAL,CAEA,IAAMsC,EAAapE,EAAMoC,GACzBS,OAAOsB,KAAKC,GAAYjB,QAAQ,SAACkB,GAC/B,IAAMC,EAAYF,EAAWC,GAAUhC,KAAKrC,GAC5CA,EAAMkE,UAAUtB,KAAK,CAAEd,QAAAA,EAASuC,SAAAA,EAAUC,UAAAA,IAC1CxC,EAAQyC,iBAAiBF,EAAUC,QAoEvCE,CAAiBxE,GAvDnB,SAAwBA,EAAO4D,GAC7B5D,EAAMQ,OAAS,WACRS,KAAK6C,UACVD,EAAS5C,KAAM,KAAM2C,GACS,mBAAnB5D,EAAMyE,UAAyBzE,EAAMyE,aAsDlDC,CAAc1E,EAAO4D,GAlDvB,SAAuB5D,GACrBA,EAAM2E,SAAW,SAAUtD,cACzBwB,OAAOsB,KAAK9C,GAAO8B,QAAQ,SAACf,GAC1BwC,EAAKZ,MAAM5B,GAAOf,EAAMe,KAE1BnB,KAAKT,UA8CPqE,CAAa7E,GA1Cf,SAAgCA,GAC9BA,EAAMM,eAAiB,SAAUI,GAC/B,OAAKO,KAAKV,QAAWU,KAAKV,OAAOD,eAC7BI,EAAKO,KAAKV,aAAqBA,YACvBA,OAAOD,eAAeI,SAuCpCoE,CAAsB9E,GAEO,mBAAlBA,EAAM+E,SAAwB/E,EAAM+E,YA+C/CC,CAAMhF,EAAOO,EAAQqD,GAjJvB,SAA6B5D,SACKA,EAAxBqB,MAAYS,EAAY9B,EAAZ8B,QAEpBe,OAAOsB,gBAFS,MAEGhB,QAAQ,SAACf,GAC1B,IAAM6C,EAAW9C,EAAanC,EAAOoC,IACpB,IAAb6C,EAAoBnD,EAAQoD,gBAAgB9C,GAC3CN,EAAQqD,aAAa/C,EAAK6C,KA8IjCG,CAAmBpF,GAEnB,IAAMqF,EAAcrF,EAAMwC,SAGpB8C,EAtBR,SAASC,EAAYvF,EAAOY,GAC1B,GAAsB,mBAAXA,EAAuB,CAChC,IAAM4E,EAASxF,EAAMY,SAErB,OAAO2E,EAAWvF,EAAOwF,GAG3B,OAAO5E,EAeU2E,CAAWvF,EAAOA,EAAMY,QACrC0E,IAAUtF,EAAMwC,SAAW8C,GAE/B,IAAMG,EAAmBlD,EAAgB8C,GACnCK,EAAmBnD,EAAgBvC,EAAMwC,UAG/CiD,EAAiBtC,QAAQ,SAACwC,GAExB5C,EAAO4C,GAGYD,EAAiBE,KAAK,SAACC,GACxC,OAAOA,EAAS/D,SAAW6D,EAAS7D,QAAQgE,YAAYD,EAAS/D,YAjEvE,SAASiE,EAAS/F,GACXA,EAAM8D,UACoB,mBAApB9D,EAAMgG,WAA0BhG,EAAMgG,YA3EnD,SAA6BhG,GAC3BA,EAAMkE,UAAUf,QAAQ,SAAC8C,GACkBA,EAAjCnE,QACAoE,oBADiCD,EAAxB5B,SAAwB4B,EAAd3B,aAG7BtE,EAAMkE,UAAY,GAuElBiC,CAAmBnG,GACnBA,EAAMO,OAAS,KACfP,EAAM8B,QAAU,KAChB9B,EAAM8D,SAAU,EAGhBvB,EAAgBvC,EAAMwC,UAAUW,QAAQ,SAACC,UAAU2C,EAAQ3C,MA6DvD2C,CAAQJ,MAIyC,IAAjDtC,EAAgB1B,eAAe0D,KAA2E,IAApDhC,EAAgB1B,eAAe3B,EAAMwC,YACzFxC,EAAMoG,KAAMpG,EAAM8B,QAAQuE,UAAY,GACrCrG,EAAM8B,QAAQwE,YAAc,KAKqB,IAApDjD,EAAgB1B,eAAe3B,EAAMwC,WAAqBxC,EAAMwC,WAAa6C,GAAgBrF,EAAMgD,WACjGhD,EAAMoG,KAAMpG,EAAM8B,QAAQuE,UAAYrG,EAAMwC,SAC3CxC,EAAM8B,QAAQwE,YAActG,EAAMwC,UAIzCkD,EAAiBvC,QAAQ,SAACC,GACxBS,EAAST,EAAOpD,EAAO4D,MAGR,IAAb0B,EAAoBvC,EAAO/C,GA/EjC,SAAiBA,GACXA,EAAMgD,WAEVhD,EAAMO,OAAOuB,QAAQyE,YAAYvG,EAAM8B,SACvC9B,EAAMgD,UAAW,EAEa,mBAAnBhD,EAAMwG,UAAyBxG,EAAMwG,YA0E3CC,CAAOzG,GAKZ6D,CAAS7D,EADM,CAAE8B,QAAS6B,GACFC,iBAqC1B,SAAgB8C,EAAY1G,EAAOO,GAC7BA,IAAWP,EAAMO,SAAQP,EAAMO,OAASA,GAE5C,IAAMoG,EAjBR,SAAwB3G,GACtB,IAAI4G,EAAI,KACe5G,EAAfqB,MAOR,OANAwB,OAAOsB,gBADS,MACGhB,QAAQ,SAACf,GAC1B,IAAIyE,EAAOzE,EACE,cAATyE,IAAsBA,EAAO,SACjCD,OAASC,OAAS1E,EAAanC,EAAOoC,SAGjCwE,EAQaE,CAAc9G,GAC1BW,EAAgBX,EAAhBW,IAAKC,EAAWZ,EAAXY,OAEb,IAAsC,IAAlC0C,EAAgB3B,QAAQhB,GAC1B,UAAWA,EAAMgG,OAEjB,IAAII,EAAY,GAEM,iBAAXnG,IACTmG,GAAanG,GAGf,IAAI4B,EAAWxC,EAAMwC,SACrB,GAAsB,mBAAX5B,EAAuB,CAChC,IAAM4E,EAASxF,EAAMY,SACC,iBAAX4E,EAAqBuB,GAAavB,EACxChD,EAAWgD,EAOlB,OAJejD,EAAgBC,GACxBW,QAAQ,SAACC,UAAU2D,GAAaL,EAAWtD,EAAOpD,SAG9CW,EAAMgG,MAAeI,OAAcpG,iCAjD9B4C,GAClB,IAAIyD,EAAM,GAIV,OAHAnE,OAAOsB,KAAKZ,GAAQJ,QAAQ,SAACf,GAC3B4E,GAPJ,SAAsBA,GACpB,OAAOA,EAAIC,QAAQ,OAAQ,KAAKA,QAAQ,oBAAqB,SAASC,cAM1DC,CAAY/E,OAAQmB,EAAOnB,SAEhC4E"}